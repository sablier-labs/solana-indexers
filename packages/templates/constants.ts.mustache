class RPC {
  helius: string;
  onfinality: string;
  fallback: string[];
}

class Token {
  SPL: string;
}

/* -------------------------------------------------------------------------- */


export let chainId = {{chainId}};    
export let chainCode = "{{chainCode}}";    
export let chainGenesis = "{{chainGenesis}}";    
export let cluster = "{{cluster}}";
export let rpc: RPC = {
  helius: "{{{rpc.helius}}}",
  onfinality: "{{{rpc.onfinality}}}",
  fallback: [{{#rpc.fallback}}"{{{.}}}"{{^last}}, {{/last}}{{/rpc.fallback}}]
};
export let substream = "{{substream}}";

export let startBlock_lockup = {{startBlock.lockup}};
export let startBlock_airdrops = {{startBlock.airdrops}};

export let lockupLinear: string[][] = [{{#lockupLinear.V10}}["{{0}}", "{{1}}", "{{2}}"],{{/lockupLinear.V10}}];
export let merkleInstant: string[][] = [{{#merkleInstant.V10}}["{{0}}", "{{1}}", "{{2}}"],{{/merkleInstant.V10}}];

export let tokenProgram: Token = {
    SPL: "{{tokenProgram.SPL}}", 
};