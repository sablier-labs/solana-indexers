// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.3

import { Writer, Reader } from "as-proto/assembly";

export class Initialize {
  static encode(message: Initialize, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.trxHash);

    writer.uint32(18);
    writer.string(message.acctSigner);

    writer.uint32(26);
    writer.string(message.acctTreasuryPda);
  }

  static decode(reader: Reader, length: i32): Initialize {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new Initialize();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.trxHash = reader.string();
          break;

        case 2:
          message.acctSigner = reader.string();
          break;

        case 3:
          message.acctTreasuryPda = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  trxHash: string;
  acctSigner: string;
  acctTreasuryPda: string;

  constructor(
    trxHash: string = "",
    acctSigner: string = "",
    acctTreasuryPda: string = ""
  ) {
    this.trxHash = trxHash;
    this.acctSigner = acctSigner;
    this.acctTreasuryPda = acctTreasuryPda;
  }
}
